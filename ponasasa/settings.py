"""
Django settings for ponasasa project.

Generated by 'django-admin startproject' using Django 3.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path
import dj_database_url 
from django.core.management.utils import get_random_secret_key
from urllib.parse import urlparse

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = 'django-insecure-9dln04ct3j5t5n*0=ijtkw1(zykc%%(u)k6b@%_5o*tx2_!$=0'
# SECRET_KEY = os.getenv("DJANGO_SECRET_KEY",get_random_secret_key())


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = os.getenv("DEBUG","False") == "True"

ALLOWED_HOSTS = ['*']
# ALLOWED_HOSTS = os.getenv("DJANGO_ALLOWED_HOST","'*'").split(",")

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'rest_framework',
     # required for serving swagger ui's css/js files
   'drf_yasg',
    'corsheaders',
   'rest_framework.authtoken',
    'djoser',
    'rest_framework_swagger',
    'mpesa',
]







#configure DRF
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
        # 'core.permissions.IsPharmacyOwrner',
        # 'core.permissions.IsPharmacist',
        # 'core.permissions.IsCustomer',
    ],
    'DEFAULT_SCHEMA_CLASS':'rest_framework.schemas.coreapi.AutoSchema' ,

    # Parser classes priority-wise for Swagger
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
        'rest_framework.parsers.JSONParser',
    ],
}

# configure Djoser
DJOSER = {
    "USER_ID_FIELD": "username"
}


CORS_ORIGIN_ALLOW_ALL = True


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

MPESA_CONFIG = {
        'CONSUMER_KEY': '<Your consumer key from daraja>',
        'CONSUMER_SECRET': '<Your consumer secret from daraja>',
        'HOST_NAME': '<Your hostname e.g https://myhostname>',
        'PASS_KEY': '<Your pass key from daraja>',
        'SAFARICOM_API': 'https://sandbox.safaricom.co.ke',
        'SHORT_CODE': '174379'

    }

ROOT_URLCONF = 'ponasasa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR, os.path.join(BASE_DIR,'core', 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ponasasa.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases


# if os.getenv("DATABASE_URL","") != "":
#     r = urlparse(os.environ.get("DATABASE_URL"))
#     DATABASES = {
#     'default': {
#         # 'ENGINE': 'django.db.backends.sqlite3',
#         # 'NAME': BASE_DIR / 'db.sqlite3',
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': os.path.relpath(r.path,"/"),
#         'USER': r.username,
#         'PASSWORD': r.password,
#         'HOST': r.localhost,
#         'PORT': r.port,
#         'OPTIONS' : {"sssmode":"require"}
#     }
# }
# else:
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
        # 'ENGINE': 'django.db.backends.postgresql_psycopg2',
        # 'NAME': 'django',
        # 'USER': 'django',
        # 'PASSWORD': '059e48cfedce30e341acaf1dc3db5366',
        # 'HOST': 'localhost',
        # 'PORT': '',
    }
}





# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



prod_db  =  dj_database_url.config(conn_max_age=500)
DATABASES['default'].update(prod_db)



STATIC_ROOT = os.path.join(BASE_DIR,"static")




# Provide default User Model as AUTH_USER_MOEL
AUTH_USER_MODEL = "core.CustomUser"


# # Add two new backends under default authentication
# REST_FRAMEWORK = {
#   'DEFAULT_AUTHENTICATION_CLASSES': (
#         'core.backends.JWTPharmacyOwnerAuthentication',
#         'core.backends.JWTPharmacistAuthentication',
#         'core.backends.JWTCustomerAuthentication',
#         'rest_framework.authentication.SessionAuthentication',
#   ),
#       'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.AllowAny',
#     ]
# }

# REST_FRAMEWORK = {
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.All',
#     ]
# }



MEDIA_URL = "/media/"

MEDIA_ROOT = os.path.join(BASE_DIR,"media")

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_PORT = 587
EMAIL_HOST_USER = 'benstardjango@gmail.com'
EMAIL_HOST_PASSWORD = 'bb99GG00'


